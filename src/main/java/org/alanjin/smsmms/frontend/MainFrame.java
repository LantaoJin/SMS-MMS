/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.alanjin.smsmms.frontend;

import java.awt.CardLayout;
import java.awt.Font;
import java.awt.LayoutManager;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.net.URI;
import java.net.URISyntaxException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Properties;

import javax.swing.JCheckBox;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.plaf.FontUIResource;
import javax.swing.table.DefaultTableModel;

import org.alanjin.smsmms.backend.bean.Member;
import org.alanjin.smsmms.backend.bean.MessageModel;
import org.alanjin.smsmms.backend.dao.MemberDao;
import org.alanjin.smsmms.backend.dao.MemberDaoImpl;
import org.alanjin.smsmms.backend.dao.MessageModelDao;
import org.alanjin.smsmms.backend.dao.MessageModelDaoImpl;
import org.alanjin.smsmms.backend.service.MassSendTask;
import org.alanjin.smsmms.backend.service.MemberAction;
import org.alanjin.smsmms.backend.service.MessageService;
import org.alanjin.smsmms.backend.service.ScheduleService;
import org.alanjin.smsmms.backend.service.SenderAndReceiverService;
import org.alanjin.smsmms.frontend.bean.SMSEntity;
import org.alanjin.smsmms.frontend.util.Util;
import org.smslib.GatewayException;
import org.smslib.SMSLibException;
import org.smslib.TimeoutException;

/**
 * 
 * @author Alan Jin
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        setUIFont();
        setUI();
        initComponents();
    }

    /**
     * 设置字体，使用系统默认，12px
     */
    public void setUIFont() {
        FontUIResource f = new FontUIResource("default", Font.PLAIN, 12);
        java.util.Enumeration<Object> keys = UIManager.getDefaults().keys();
        while (keys.hasMoreElements()) {
            Object key = keys.nextElement();
            Object value = UIManager.get(key);
            if (value instanceof javax.swing.plaf.FontUIResource)
                UIManager.put(key, f);
        }
    }

    /**
     * 设置UIManager
     */
    public void setUI() {
        // 设置UIMangager为系统默认
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed"
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        DeleteDialog = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        indexPanel = new javax.swing.JPanel();
        welcomePanel = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        memberPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        memberTable = new javax.swing.JTable();
        filterPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        Date initDate = new Date(0);
        birthdayPicker = new com.eltima.components.ui.DatePicker(initDate, BirthDayQueryFormat, datePickerFont, null);
        selectByBirthday = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        nameFilterTextField = new javax.swing.JTextField();
        selectByName = new javax.swing.JButton();
        listAllMemberButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        joindayFrom = new com.eltima.components.ui.DatePicker(new Date(), org.alanjin.smsmms.backend.util.Util.dayFormatStr, null, null);
        jLabel5 = new javax.swing.JLabel();
        joindayTo = new com.eltima.components.ui.DatePicker(new Date(), org.alanjin.smsmms.backend.util.Util.dayFormatStr, null, null);
        selectByJoinday = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        phoneFilterTextField = new javax.swing.JTextField();
        selectByPhone = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        feeFromTextField = new javax.swing.JTextField();
        feeToTextField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        selectByFee = new javax.swing.JButton();
        buttonPanel1 = new javax.swing.JPanel();
        viewDetailButton = new javax.swing.JButton();
        modifyDetailButton = new javax.swing.JButton();
        addFeeButton = new javax.swing.JButton();
        broadcastButton = new javax.swing.JButton();
        addMemberPanel = new MemberJForm(this.memberAction);
        p2pPanel = new javax.swing.JPanel();
        messPanel = new javax.swing.JPanel();
        viewReplyPanel = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        homeMenu = new javax.swing.JMenu();
        showHomeMenu = new javax.swing.JMenuItem();
        MemberMenu = new javax.swing.JMenu();
        ListAllMenuItem = new javax.swing.JMenuItem();
        AddNewMenuItem = new javax.swing.JMenuItem();
        SMSMenu = new javax.swing.JMenu();
        P2PMenuItem = new javax.swing.JMenuItem();
        MessMenuItem = new javax.swing.JMenuItem();
        ViewReplyMenuItem = new javax.swing.JMenuItem();
        MsgModelMenuItem = new javax.swing.JMenuItem();
        TimerMenuItem = new javax.swing.JMenuItem();
        AdminMenu = new javax.swing.JMenu();
        PasswdMenuItem = new javax.swing.JMenuItem();
        AdminMenuItem = new javax.swing.JMenuItem();
        HistoryMenuItem = new javax.swing.JMenuItem();
        SyncMenuItem = new javax.swing.JMenuItem();
        AboutMenu = new javax.swing.JMenu();
        AboutAppMenuItem = new javax.swing.JMenuItem();

        DeleteDialog.setTitle("删除勾选的会员");
        DeleteDialog.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        DeleteDialog.setResizable(false);

        javax.swing.GroupLayout DeleteDialogLayout = new javax.swing.GroupLayout(DeleteDialog.getContentPane());
        DeleteDialog.getContentPane().setLayout(DeleteDialogLayout);
        DeleteDialogLayout.setHorizontalGroup(
            DeleteDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        DeleteDialogLayout.setVerticalGroup(
            DeleteDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        jButton1.setText("全选");

        jButton2.setText("删除");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("修改会费");

        jButton4.setText("修改基本资料");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addGap(18, 18, 18)
                .addComponent(jButton4)
                .addGap(0, 565, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton1, jButton2, jButton3, jButton4});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("史山寺佛恩互助会会员管理系统");
        setResizable(false);

        indexPanel.setMinimumSize(new java.awt.Dimension(780, 560));
        indexPanel.setLayout(new java.awt.CardLayout());

        welcomePanel.setMinimumSize(new java.awt.Dimension(780, 560));
        welcomePanel.setPreferredSize(new java.awt.Dimension(800, 600));

        jTextField1.setFont(new java.awt.Font("宋体", 0, 36)); // NOI18N
        jTextField1.setText("Hello World!");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout welcomePanelLayout = new javax.swing.GroupLayout(welcomePanel);
        welcomePanel.setLayout(welcomePanelLayout);
        welcomePanelLayout.setHorizontalGroup(
            welcomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(welcomePanelLayout.createSequentialGroup()
                .addGap(239, 239, 239)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(247, Short.MAX_VALUE))
        );
        welcomePanelLayout.setVerticalGroup(
            welcomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(welcomePanelLayout.createSequentialGroup()
                .addGap(218, 218, 218)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(280, Short.MAX_VALUE))
        );

        indexPanel.add(welcomePanel, "card7");

        memberPanel.setMinimumSize(new java.awt.Dimension(800, 600));
        memberPanel.setPreferredSize(new java.awt.Dimension(800, 600));
        memberPanel.setLayout(new java.awt.BorderLayout());

        memberTable.setModel(new DefaultTableModel(
            new String [] {
                "select", "姓名", "性别", "手机号", "出生日期", "入会日期", "累计会费"
            },0) {
                Class[] types = new Class [] {
                    java.lang.Boolean.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class
                };
                @Override
                public Class getColumnClass(int c) {
                    Object value = getValueAt(0, c);
                    if(value!=null)
                    return value.getClass();
                    else return super.getClass();
                }
                public boolean isCellEditable(int row, int column) {
                    return false;
                }
            });
            memberTable.getColumn("select").setHeaderRenderer(check);
            memberTable.getTableHeader().addMouseListener(new MouseAdapter() {
                @Override
                public void mouseClicked(MouseEvent e){
                    if(memberTable.getColumnModel().getColumnIndexAtX(e.getX())==0){//如果点击的是第0列，即checkbox这一列
                        JCheckBox Checkbox = (JCheckBox)check;
                        boolean b = !check.isSelected();
                        check.setSelected(b);
                        memberTable.getTableHeader().repaint();
                        for(int i=0;i<memberTable.getRowCount();i++){
                            memberTable.getModel().setValueAt(b, i, 0);//把这一列都设成和表头一样
                        }
                    }
                }
            });
            jScrollPane2.setViewportView(memberTable);

            memberPanel.add(jScrollPane2, java.awt.BorderLayout.CENTER);

            jLabel1.setText("选择生日：");

            selectByBirthday.setText("查找");
            selectByBirthday.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    selectByBirthdayActionPerformed(evt);
                }
            });

            jLabel2.setForeground(new java.awt.Color(255, 0, 0));
            jLabel2.setText("说明：生日忽略年份");

            jLabel3.setText("选择姓名：");

            selectByName.setText("查找");
            selectByName.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    selectByNameActionPerformed(evt);
                }
            });

            listAllMemberButton.setText("查看全部(刷新)");
            listAllMemberButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    listAllMemberButtonActionPerformed(evt);
                }
            });

            jLabel4.setText("入会日期从");

            jLabel5.setText("到");

            selectByJoinday.setText("查找");
            selectByJoinday.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    selectByJoindayActionPerformed(evt);
                }
            });

            jLabel6.setText("手机号码：");

            selectByPhone.setText("查找");
            selectByPhone.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    selectByPhoneActionPerformed(evt);
                }
            });

            jLabel7.setText("累积会费从");

            jLabel9.setText("到");

            selectByFee.setText("查找");
            selectByFee.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    selectByFeeActionPerformed(evt);
                }
            });

            javax.swing.GroupLayout filterPanelLayout = new javax.swing.GroupLayout(filterPanel);
            filterPanel.setLayout(filterPanelLayout);
            filterPanelLayout.setHorizontalGroup(
                filterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(filterPanelLayout.createSequentialGroup()
                    .addGap(18, 18, 18)
                    .addGroup(filterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, filterPanelLayout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(birthdayPicker, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel2)
                            .addGap(7, 7, 7))
                        .addGroup(filterPanelLayout.createSequentialGroup()
                            .addComponent(jLabel7)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(feeFromTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel9)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(feeToTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(filterPanelLayout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(joindayFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel5)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(joindayTo, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(filterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(filterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(selectByJoinday)
                            .addComponent(selectByBirthday))
                        .addComponent(selectByFee))
                    .addGap(32, 32, 32)
                    .addGroup(filterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(filterPanelLayout.createSequentialGroup()
                            .addGroup(filterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel3)
                                .addComponent(jLabel6))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(filterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(nameFilterTextField)
                                .addComponent(phoneFilterTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(filterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(selectByName)
                                .addComponent(selectByPhone)))
                        .addComponent(listAllMemberButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(193, Short.MAX_VALUE))
            );

            filterPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {birthdayPicker, feeFromTextField, feeToTextField, joindayFrom, joindayTo, nameFilterTextField, phoneFilterTextField});

            filterPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {selectByBirthday, selectByFee, selectByJoinday, selectByName, selectByPhone});

            filterPanelLayout.setVerticalGroup(
                filterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(filterPanelLayout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(filterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(selectByJoinday)
                        .addGroup(filterPanelLayout.createSequentialGroup()
                            .addGroup(filterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(filterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(selectByBirthday)
                                    .addComponent(jLabel3)
                                    .addComponent(nameFilterTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(selectByName)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(filterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(birthdayPicker, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(filterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(joindayFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(joindayTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(filterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(phoneFilterTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(selectByPhone))
                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(filterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(filterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(feeFromTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(feeToTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(selectByFee))
                        .addComponent(listAllMemberButton))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            );

            filterPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {birthdayPicker, feeFromTextField, feeToTextField, joindayFrom, joindayTo, nameFilterTextField, phoneFilterTextField});

            filterPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {listAllMemberButton, selectByBirthday, selectByFee, selectByJoinday, selectByName, selectByPhone});

            memberPanel.add(filterPanel, java.awt.BorderLayout.PAGE_START);

            buttonPanel1.setMinimumSize(new java.awt.Dimension(800, 33));

            viewDetailButton.setText("查看详细");
            viewDetailButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    viewDetailButtonActionPerformed(evt);
                }
            });
            buttonPanel1.add(viewDetailButton);

            modifyDetailButton.setText("修改资料");
            modifyDetailButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    modifyDetailButtonActionPerformed(evt);
                }
            });
            buttonPanel1.add(modifyDetailButton);

            addFeeButton.setText("缴纳会费");
            addFeeButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    addFeeButtonActionPerformed(evt);
                }
            });
            buttonPanel1.add(addFeeButton);

            broadcastButton.setText("短信群发");
            broadcastButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    broadcastButtonActionPerformed(evt);
                }
            });
            buttonPanel1.add(broadcastButton);

            memberPanel.add(buttonPanel1, java.awt.BorderLayout.PAGE_END);

            indexPanel.add(memberPanel, "card2");

            indexPanel.add(addMemberPanel, "card3");

            p2pPanel.setPreferredSize(new java.awt.Dimension(800, 600));

            javax.swing.GroupLayout p2pPanelLayout = new javax.swing.GroupLayout(p2pPanel);
            p2pPanel.setLayout(p2pPanelLayout);
            p2pPanelLayout.setHorizontalGroup(
                p2pPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGap(0, 800, Short.MAX_VALUE)
            );
            p2pPanelLayout.setVerticalGroup(
                p2pPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGap(0, 600, Short.MAX_VALUE)
            );

            indexPanel.add(p2pPanel, "card4");

            messPanel.setPreferredSize(new java.awt.Dimension(800, 600));

            javax.swing.GroupLayout messPanelLayout = new javax.swing.GroupLayout(messPanel);
            messPanel.setLayout(messPanelLayout);
            messPanelLayout.setHorizontalGroup(
                messPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGap(0, 800, Short.MAX_VALUE)
            );
            messPanelLayout.setVerticalGroup(
                messPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGap(0, 600, Short.MAX_VALUE)
            );

            indexPanel.add(messPanel, "card5");

            viewReplyPanel.setPreferredSize(new java.awt.Dimension(800, 600));

            javax.swing.GroupLayout viewReplyPanelLayout = new javax.swing.GroupLayout(viewReplyPanel);
            viewReplyPanel.setLayout(viewReplyPanelLayout);
            viewReplyPanelLayout.setHorizontalGroup(
                viewReplyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGap(0, 800, Short.MAX_VALUE)
            );
            viewReplyPanelLayout.setVerticalGroup(
                viewReplyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGap(0, 600, Short.MAX_VALUE)
            );

            indexPanel.add(viewReplyPanel, "card6");

            jMenuBar1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

            homeMenu.setText("首页");

            showHomeMenu.setText("显示首页");
            showHomeMenu.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseReleased(java.awt.event.MouseEvent evt) {
                    showHomeMenuMouseReleased(evt);
                }
            });
            showHomeMenu.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    showHomeMenuActionPerformed(evt);
                }
            });
            homeMenu.add(showHomeMenu);

            jMenuBar1.add(homeMenu);

            MemberMenu.setText("会员管理");

            ListAllMenuItem.setText("查看全部");
            ListAllMenuItem.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    ListAllMenuItemActionPerformed(evt);
                }
            });
            MemberMenu.add(ListAllMenuItem);

            AddNewMenuItem.setText("添加新会员");
            AddNewMenuItem.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    AddNewMenuItemActionPerformed(evt);
                }
            });
            MemberMenu.add(AddNewMenuItem);

            jMenuBar1.add(MemberMenu);

            SMSMenu.setText("短信管理");

            P2PMenuItem.setText("点对点短信");
            P2PMenuItem.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    P2PMenuItemActionPerformed(evt);
                }
            });
            SMSMenu.add(P2PMenuItem);

            MessMenuItem.setText("短信群发");
            SMSMenu.add(MessMenuItem);

            ViewReplyMenuItem.setText("查看回复");
            SMSMenu.add(ViewReplyMenuItem);

            MsgModelMenuItem.setText("短信模版");
            SMSMenu.add(MsgModelMenuItem);

            TimerMenuItem.setText("定时发送");
            SMSMenu.add(TimerMenuItem);

            jMenuBar1.add(SMSMenu);

            AdminMenu.setText("管理员");

            PasswdMenuItem.setText("修改密码");
            AdminMenu.add(PasswdMenuItem);

            AdminMenuItem.setText("登陆管理");
            AdminMenu.add(AdminMenuItem);

            HistoryMenuItem.setText("操作记录");
            AdminMenu.add(HistoryMenuItem);

            SyncMenuItem.setText("数据同步");
            AdminMenu.add(SyncMenuItem);

            jMenuBar1.add(AdminMenu);

            AboutMenu.setText("关于");

            AboutAppMenuItem.setText("关于本软件");
            AboutMenu.add(AboutAppMenuItem);

            jMenuBar1.add(AboutMenu);

            setJMenuBar(jMenuBar1);

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
            getContentPane().setLayout(layout);
            layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 2, Short.MAX_VALUE)
                    .addComponent(indexPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 2, Short.MAX_VALUE))
            );
            layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(indexPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            );

            pack();
        }// </editor-fold>//GEN-END:initComponents

    private void viewDetailButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewDetailButtonActionPerformed
        String memId = (String)this.memberTable.getValueAt(this.memberTable.getSelectedRow(), 1);
        Object[] options = new Object[1];
        options[0] = new VeiwDetailJForm(memberAction, memId);
        JOptionPane.showOptionDialog(this, null, "查看详细", JOptionPane.NO_OPTION, JOptionPane.NO_OPTION, null, options, null);
    }//GEN-LAST:event_viewDetailButtonActionPerformed

    private void modifyDetailButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyDetailButtonActionPerformed
        String memId = (String)this.memberTable.getValueAt(this.memberTable.getSelectedRow(), 1);
        Object[] options = new Object[1];
        options[0] = new ModifyDetailJForm(memberAction, memId);
        JOptionPane.showOptionDialog(this, null, "修改资料", JOptionPane.NO_OPTION, JOptionPane.NO_OPTION, null, options, null);
    }//GEN-LAST:event_modifyDetailButtonActionPerformed

    private void addFeeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFeeButtonActionPerformed
        String memId = (String)this.memberTable.getValueAt(this.memberTable.getSelectedRow(), 1);
        Object[] options = new Object[1];
        options[0] = new AddFeeJForm(memberAction, memId);
        JOptionPane.showOptionDialog(this, null, "续费", JOptionPane.NO_OPTION, JOptionPane.NO_OPTION, null, options, null);
    }//GEN-LAST:event_addFeeButtonActionPerformed

    private void broadcastButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_broadcastButtonActionPerformed
        // TODO add your handling code here:
//        String[] memIds = new String[this.memberTable.getSelectedRowCount()];
//        String[] names = new String[this.memberTable.getSelectedRowCount()];
//        String[] phones = new String[this.memberTable.getSelectedRowCount()];
        int[] selected = this.memberTable.getSelectedRows();
        List<SMSEntity> entitys = new ArrayList<SMSEntity>();
        for (int i = 0; i < this.memberTable.getSelectedRowCount(); i++) {
            String memIdSelected = (String)this.memberTable.getValueAt(selected[i], 1);
            String nameSelected = (String)this.memberTable.getValueAt(selected[i], 2);
            String sexSelected = (String)this.memberTable.getValueAt(selected[i], 3);
            String phoneSelected = (String)this.memberTable.getValueAt(selected[i], 4);
            SMSEntity entity = new SMSEntity(memIdSelected, nameSelected, sexSelected, phoneSelected);
            entitys.add(entity);
        }
        
        Object[] options = new Object[1];
        options[0] = new BroadcastJForm(messageService, senderAndReceiverService, entitys);
        JOptionPane.showOptionDialog(this, null, "短信群发 ", JOptionPane.NO_OPTION, JOptionPane.NO_OPTION, null, options, null);
    }//GEN-LAST:event_broadcastButtonActionPerformed

    private void P2PMenuItemActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_P2PMenuItemActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_P2PMenuItemActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton2ActionPerformed
        // TODO 获得所选择的memberId list， 并拿到个数
        if (JOptionPane.showConfirmDialog(null, "确定删除所选则的N个会员？", "删除会员",
                JOptionPane.OK_CANCEL_OPTION) == 0)
            // TODO 删除所选会员信息
            ;
    }// GEN-LAST:event_jButton2ActionPerformed

    private void ListAllMenuItemActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_ListAllMenuItemActionPerformed
        // TODO add your handling code here:
        // if(JOptionPane.showConfirmDialog(null, "确定删除所选则的N个会员？", "删除会员",
        // JOptionPane.OK_CANCEL_OPTION) == 0)

        List<Member> allMembers = memberAction.getAllMembers();
        Util.fillMemberTable(memberTable, allMembers);

        LayoutManager layout = this.indexPanel.getLayout();
        if (layout instanceof CardLayout) {
            CardLayout card = (CardLayout) layout;
            card.show(indexPanel, "card2");
        }
    }// GEN-LAST:event_ListAllMenuItemActionPerformed

    private void AddNewMenuItemActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_AddNewMenuItemActionPerformed
        // TODO add your handling code here:
        LayoutManager layout = this.indexPanel.getLayout();
        if (layout instanceof CardLayout) {
            CardLayout card = (CardLayout) layout;
            card.show(indexPanel, "card3");
        }
    }// GEN-LAST:event_AddNewMenuItemActionPerformed

    private void showHomeMenuMouseReleased(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_showHomeMenuMouseReleased
        LayoutManager layout = this.indexPanel.getLayout();
        if (layout instanceof CardLayout) {
            CardLayout card = (CardLayout) layout;
            card.first(indexPanel);
        }
    }// GEN-LAST:event_showHomeMenuMouseReleased

    private void showHomeMenuActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_showHomeMenuActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_showHomeMenuActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_jTextField1ActionPerformed

    private void selectByBirthdayActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_selectByBirthdayActionPerformed
        List<Member> filterMembers = memberAction
                .getMembersByBirthDay(this.birthdayPicker.getText());
        Util.fillMemberTable(memberTable, filterMembers);
    }// GEN-LAST:event_selectByBirthdayActionPerformed

    private void selectByNameActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_selectByNameActionPerformed
        List<Member> filterMembers = memberAction
                .getMembersByName(this.nameFilterTextField.getText().trim());
        Util.fillMemberTable(memberTable, filterMembers);
    }// GEN-LAST:event_selectByNameActionPerformed

    private void listAllMemberButtonActionPerformed(
            java.awt.event.ActionEvent evt) {// GEN-FIRST:event_listAllMemberButtonActionPerformed
        List<Member> allMembers = memberAction.getAllMembers();
        Util.fillMemberTable(memberTable, allMembers);
        this.nameFilterTextField.setText("");
        this.phoneFilterTextField.setText("");
        this.feeFromTextField.setText("");
        this.feeToTextField.setText("");
    }// GEN-LAST:event_listAllMemberButtonActionPerformed

    private void selectByPhoneActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_selectByPhoneActionPerformed
        List<Member> filterMembers = memberAction
                .getMembersByPhone(this.phoneFilterTextField.getText().trim());
        Util.fillMemberTable(memberTable, filterMembers);
    }// GEN-LAST:event_selectByPhoneActionPerformed

    private void selectByJoindayActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_selectByJoindayActionPerformed
        List<Member> filterMembers = memberAction.getMembersBetweenJoinday(
                this.joindayFrom.getText(), this.joindayTo.getText());
        Util.fillMemberTable(memberTable, filterMembers);
    }// GEN-LAST:event_selectByJoindayActionPerformed

    private void selectByFeeActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_selectByFeeActionPerformed
        String from = this.feeFromTextField.getText().trim();
        String to = this.feeToTextField.getText().trim();
        if (Util.isDigit(from) && Util.isDigit(to)) {
            List<Member> filterMembers = memberAction.getMembersBetweenFeesum(
                    from, to);
            Util.fillMemberTable(memberTable, filterMembers);
        } else {
            Util.verifyAlert("\"累积会费\"必须是数字", "查询列表");
        }
    }// GEN-LAST:event_selectByFeeActionPerformed

    private static void initBackendMassSendTask(Properties prop)
            throws SQLException {
        ScheduleService smsAction = new ScheduleService();
        String[] defaultTime = prop.getProperty("SMS.massSendTask.time",
                "10:00:00").split(":");
        int defaultHour = Integer.parseInt(defaultTime[0]);
        int defaultMinute = Integer.parseInt(defaultTime[1]);
        String defaultTaskName = prop.getProperty("SMS.massSendTask.taskName");
        String defaultModelName = prop
                .getProperty("SMS.massSendTask.modelName");
        MessageModelDao mmDao = new MessageModelDaoImpl();
        MessageModel defaultMessageModel = mmDao
                .selectMessageModel(defaultModelName);
        MassSendTask task = new MassSendTask(defaultTaskName,
                defaultMessageModel);
        smsAction.addFixedTimeTaskAndRun(task, defaultHour, defaultMinute, 0);
    }

    /**
     * @throws InterruptedException 
     * @throws SMSLibException 
     * @throws GatewayException 
     * @throws TimeoutException 
     * @param args
     *            the command line arguments
     * @throws  
     */
    public static void main(String args[]) throws URISyntaxException, IOException, SQLException, TimeoutException, GatewayException, SMSLibException, InterruptedException {
        Properties prop = new Properties();
        prop.load(ClassLoader.getSystemResourceAsStream("config.properties"));
        boolean hasSetted = Boolean.parseBoolean(prop.getProperty(
                "SMS.massSendTask.setted", "false"));
        //TODO debug
//        String com = prop.getProperty("SMS.com", "COM1");
//        senderAndReceiverService = SenderAndReceiverService.newInstance(com);
        if (hasSetted) {
            initBackendMassSendTask(prop);
        }
        String titilFilePath = prop.getProperty("SMS.model.titlePath");
        File file = new File(titilFilePath);
        titleReader = new BufferedReader(new InputStreamReader(new FileInputStream(file), "UTF-8"));
        System.out.println(titleReader.readLine());
        String title;
        while((title = titleReader.readLine()) != null) {
            titleList.add(title);
        }

        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed"
        // desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase
         * /tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager
                    .getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(
                    java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(
                    java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(
                    java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(
                    java.util.logging.Level.SEVERE, null, ex);
        }
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }
    
    public static List<String> getTitleList() {
        return titleList;
    }

    public static BufferedReader titleReader;
    public static BufferedWriter titleWriter;
    private static MemberAction memberAction = MemberAction.newInstance();
    private static MessageService messageService = MessageService.newInstance();
    private static SenderAndReceiverService senderAndReceiverService;
    private static final String BirthDayQueryFormat = "MM-dd";
    private static final Font datePickerFont = new Font("Times New Roman",
            Font.PLAIN, 14);
    private static List<String> titleList = new ArrayList<String>();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem AboutAppMenuItem;
    private javax.swing.JMenu AboutMenu;
    private javax.swing.JMenuItem AddNewMenuItem;
    private javax.swing.JMenu AdminMenu;
    private javax.swing.JMenuItem AdminMenuItem;
    private javax.swing.JDialog DeleteDialog;
    private javax.swing.JMenuItem HistoryMenuItem;
    private javax.swing.JMenuItem ListAllMenuItem;
    private javax.swing.JMenu MemberMenu;
    private javax.swing.JMenuItem MessMenuItem;
    private javax.swing.JMenuItem MsgModelMenuItem;
    private javax.swing.JMenuItem P2PMenuItem;
    private javax.swing.JMenuItem PasswdMenuItem;
    private javax.swing.JMenu SMSMenu;
    private javax.swing.JMenuItem SyncMenuItem;
    private javax.swing.JMenuItem TimerMenuItem;
    private javax.swing.JMenuItem ViewReplyMenuItem;
    private javax.swing.JButton addFeeButton;
    private javax.swing.JPanel addMemberPanel;
    private com.eltima.components.ui.DatePicker birthdayPicker;
    private javax.swing.JButton broadcastButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JPanel buttonPanel1;
    private javax.swing.JTextField feeFromTextField;
    private javax.swing.JTextField feeToTextField;
    private javax.swing.JPanel filterPanel;
    private javax.swing.JMenu homeMenu;
    private javax.swing.JPanel indexPanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private com.eltima.components.ui.DatePicker joindayFrom;
    private com.eltima.components.ui.DatePicker joindayTo;
    private javax.swing.JButton listAllMemberButton;
    private javax.swing.JPanel memberPanel;
    private javax.swing.JTable memberTable;
    final CheckBoxRenderer check = new CheckBoxRenderer();
    private javax.swing.JPanel messPanel;
    private javax.swing.JButton modifyDetailButton;
    private javax.swing.JTextField nameFilterTextField;
    private javax.swing.JPanel p2pPanel;
    private javax.swing.JTextField phoneFilterTextField;
    private javax.swing.JButton selectByBirthday;
    private javax.swing.JButton selectByFee;
    private javax.swing.JButton selectByJoinday;
    private javax.swing.JButton selectByName;
    private javax.swing.JButton selectByPhone;
    private javax.swing.JMenuItem showHomeMenu;
    private javax.swing.JButton viewDetailButton;
    private javax.swing.JPanel viewReplyPanel;
    private javax.swing.JPanel welcomePanel;
    // End of variables declaration//GEN-END:variables
}
